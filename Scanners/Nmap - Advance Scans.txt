ADVANCE SCANS



1. nmap -sT IP_ADDR		# TCP Connect Scan

- TCP 3-Way Handshake for TCP Connect Scan

		------------ SYN -------------->
CLIENT		<----------- SYN/ACK -----------		SERVER
		------------ ACK -------------->
		------------ RST/ACK ---------->

- A closed TCP port responds to a SYN packet with RST/ACK to indicate that it is not open.
- Open Ports reply with a SYN/ACK & Nmap completes the 3-way Handshake by sending an ACK.
- Firewall might log the handshake attempt by attacker since it tries to make complete Handshake.



2. nmap -sS IP_ADDR		# TCP SYN Scan

- TCP 3-Way handshake for TCP SYN Scan

		------------- SYN ------------->
CLIENT		<---------- SYN/ACK ------------		SERVER
		------------- RST ------------->

- Requires Privileged user (root or sudoer)
- SYN scan does not complete the TCP 3-way handshake, instead, it blocks the connection once it receives a response (SYN/ACK) from the server.
- Nmap sends an RST packet once a SYN/ACK packet is received.
- It discovers the open ports successfully without fully establishing the TCP Connection.
- Firewall can't log the handshake attempt by attacker since it doesn't make complete Handshake.



3. nmap -sU IP_ADDR		# UDP Scan

- UDP Scan

CLIENT		----------- UDP PCKT --------->			SERVER

- Requires root privileges.
- There is no gurantee that the service listening of UDP port will respond.
- Closed UDP Port will respond with unreachable error (type 3(Destination Unreachable), code 3(Port Unreachable)).
- Open ports won't respond back, thus Nmap will state them as Open.



----- FIREWALL EVASION TECHNIQUES ------


4. nmap -sA IP_ADDR		# TCP ACK Scan

- Sends a TCP packet with the ACK flag set. 
- Won’t tell whether the target port is open in a simple setup.

CLIENT		------------- ACK ----------->			SERVER		# Open or Closed TCP Port
		<------------- RST -----------


5. nmap -sW IP_ADDR		# TCP Windows Scan

- Almost the same as the ACK scan
- Examines the TCP Window field of the RST packets returned

CLIENT		------------- ACK ----------->			SERVER		# Open or Closed TCP Port
		<------------- RST -----------


6. nmap --scanflags RSTSYNFIN	# Custom Scan

- To try new TCP flag combination beyond the built-in TCP scan types



-------------------------------------------------------------------------------------------------------------------------------------------------


PERFORMANCE & FINE TUNING OF NMAP SCANS



1. Specifying the ports

- port list: 			-p22,80,443
- port range: 			-p1-1023
- all 65535 ports: 		-p-
- most common 100 ports: 	-F	
- most common 10 ports:		--top-ports 10



2. Control Scan Timing

- scan timing			-T<0-5>

- paranoid			-T0 	# TO avoid IDS alerts. Scans one port, waits 5 mins to send next probe.
- sneaky 			-T1	# often used during real-world engagements for stealth scans. For avoiding Firewalls.
- polite 			-T2	# time-delay of 400 milleseconds. Unlikely to interfere with the target system.
- normal 			-T3	# default Nmap Scan.
- aggressive			-T4	# often used during CTFs & learning to scan practice targets.
- insane 			-T5	# Most aggressive. Might affect accuracy of scan results due to increased likelihood of packet loss.

- host timeout			--host-timeout 1m	# scan target for 1 minute before aborting
				--host-timeout 60s	



3. Control Packet Rate

- Don't send more than 10 packets per Second		--max-rate 10 OR --max-rate=10
- Send atleast 10 packets per second			--min-rate 10 OR --min-rate=10



4. Control Probing Parallelism

- Maintain atleast 512 probes in parallel		--min-parallelism 512 OR --min-parallelism=512
- Maintain probes not more than 512 in parallel		--max-parallelism 512 OR --max-parallelism=512




=====================================================================================================================================




ADVANCE TECHNIQUES


1. NULL Scan:	-sN

- No flag is set, all six flag bits are set to zero.


CLIENT		----------- NULL ----------->		SERVER			# Open/Filtered TCP Port
			No-reply

CLIENT		----------- NULL ----------->		SERVER			# Closed TCP Port
		<------- RST,ACK ------------		


2. FIN Scan:	-sF

- Sends a TCP packet with the FIN flag set.


CLIENT		----------- FIN ----------->		SERVER			# Open/Filtered TCP Port
			No-reply

CLIENT		----------- FIN ----------->		SERVER			# Closed TCP Port
		<------- RST,ACK -----------		


3. Xmas Scan:	-sX

- Sets the FIN, PSH, and URG flags simultaneously.


CLIENT		------- FIN,PSH,URG -------->		SERVER			# Open/Filtered TCP Port
			No-reply

CLIENT		------- FIN,PSH,URG -------->		SERVER			# Closed TCP Port
		<------- RST,ACK ------------		




--------------------------------------------------------------------------------------------------------------------------------------


SPOOFIND AND DECOYS



1. IP SPOOFING

- You will be able to scan a target system using a spoofed IP address and even a spoofed MAC address.
- If you try to scan a target from some random network using a spoofed IP address, chances are you won’t have any response routed to 
you, and the scan results could be unreliable.

Scanning with a spoofed IP address is three steps:
	- Attacker sends a packet with a spoofed source IP address to the target machine.
	- Target machine replies to the spoofed IP address as the destination.
	- Attacker captures the replies to figure out open ports.

> nmap -e NET_INTERFACE -Pn -S SPOOFED_IP 10.10.120.213		# -e: specify Network Interface
								# -Pn: No ping scan (must)
								# SPOOFED_IP <IP_ADDR>: IP to which we have to spoof

- Spoofed Scan is useless if the attacker system cannot monitor the network for responses.



2. MAC SPOOFING

- Can be performed only on the same subnet
- Only possible if the attacker and the target machine are on the same Ethernet (802.3) network or same WiFi (802.11).

> nmap --spoof-mac MAC_ADDR


NOTE: Spoofing only works in a minimal number of cases where certain conditions are met.



3. DECOYS

- Make the scan appear to be coming from many IP addresses so that the attacker’s IP address would be lost among them.

> nmap -D decoy1,decoy2,decoy3,... IP_ADDR	# decoy1,decoy2,.. : decoy IPs

> nmap -D 10.10.0.1,10.10.1.2,ME IP_ADDR	# ME: to specify your IP

> nmap -D 10.10.0.1,RND,RND,ME IP_ADDR		# RND: Random IP Addresses




-------------------------------------------------------------------------------------------------------------------------------------



FRAGMENTED PACKETS 


1. nmap -f IP_ADDR		# Packet Fragmentation		

- -f option will fragment packet into 8 bytes or less
- -ff OR -f -f option will fragment packet into 16 bytes
- with --mtu option you can change default value of fragments, and must be multiple of 8

- with --data-length <NUM> option, you can increase the size of your packets to make them look innocuous.

